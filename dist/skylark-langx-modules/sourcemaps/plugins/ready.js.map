{"version":3,"sources":["plugins/ready.js"],"names":["define","modular","isTop","testDiv","scrollIntervalId","isBrowser","window","document","isPageLoaded","doc","readyCalls","callReady","callbacks","length","i","runCallbacks","pageLoaded","clearInterval","addEventListener","attachEvent","createElement","frameElement","e","doScroll","external","setInterval","readyState","domReady","callback","push","load","name","req","onLoad","config","isBuild","plugins","ready"],"mappings":";;;;;;;AAAAA,QACA,cACE,SAASC,GACP,aAEA,IAAIC,EAAOC,EAASC,EAChBC,EAA8B,oBAAXC,QAA0BA,OAAOC,SACpDC,GAAgBH,EAChBI,EAAMJ,EAAYE,SAAW,KAC7BG,KASJ,SAASC,IACL,IAAIC,EAAYF,EAEZF,GAEII,EAAUC,SACVH,KAbZ,SAAsBE,GAClB,IAAIE,EACJ,IAAKA,EAAI,EAAGA,EAAIF,EAAUC,OAAQC,GAAK,EACnCF,EAAUE,GAAGL,GAWTM,CAAaH,IAQzB,SAASI,IACAR,IACDA,GAAe,EACXJ,GACAa,cAAcb,GAGlBO,KAIR,GAAIN,EAAW,CACX,GAAIE,SAASW,iBAGTX,SAASW,iBAAiB,mBAAoBF,GAAY,GAC1DV,OAAOY,iBAAiB,OAAQF,GAAY,QACzC,GAAIV,OAAOa,YAAa,CAC3Bb,OAAOa,YAAY,SAAUH,GAE7Bb,EAAUI,SAASa,cAAc,OACjC,IACIlB,EAAgC,OAAxBI,OAAOe,aACjB,MAAOC,IAKLnB,EAAQoB,UAAYrB,GAASI,OAAOkB,WACpCpB,EAAmBqB,YAAY,WAC3B,IACItB,EAAQoB,WACRP,IACF,MAAOM,MACV,KAeiB,aAAxBf,SAASmB,YACTV,IAWR,SAASW,EAASC,GAMd,OALIpB,EACAoB,EAASnB,GAETC,EAAWmB,KAAKD,GAEbD,EAkBX,OAVAA,EAASG,KAAO,SAAUC,EAAMC,EAAKC,EAAQC,GACrCA,EAAOC,QACPF,EAAO,MAEPN,EAASM,IAMVhC,EAAQmC,QAAQC,MAAQV","file":"../../plugins/ready.js","sourcesContent":["define([\r\n\"../modular\"\r\n],function(modular){\r\n    'use strict';\r\n\r\n    var isTop, testDiv, scrollIntervalId,\r\n        isBrowser = typeof window !== \"undefined\" && window.document,\r\n        isPageLoaded = !isBrowser,\r\n        doc = isBrowser ? document : null,\r\n        readyCalls = [];\r\n\r\n    function runCallbacks(callbacks) {\r\n        var i;\r\n        for (i = 0; i < callbacks.length; i += 1) {\r\n            callbacks[i](doc);\r\n        }\r\n    }\r\n\r\n    function callReady() {\r\n        var callbacks = readyCalls;\r\n\r\n        if (isPageLoaded) {\r\n            //Call the DOM ready callbacks\r\n            if (callbacks.length) {\r\n                readyCalls = [];\r\n                runCallbacks(callbacks);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the page as loaded.\r\n     */\r\n    function pageLoaded() {\r\n        if (!isPageLoaded) {\r\n            isPageLoaded = true;\r\n            if (scrollIntervalId) {\r\n                clearInterval(scrollIntervalId);\r\n            }\r\n\r\n            callReady();\r\n        }\r\n    }\r\n\r\n    if (isBrowser) {\r\n        if (document.addEventListener) {\r\n            //Standards. Hooray! Assumption here that if standards based,\r\n            //it knows about DOMContentLoaded.\r\n            document.addEventListener(\"DOMContentLoaded\", pageLoaded, false);\r\n            window.addEventListener(\"load\", pageLoaded, false);\r\n        } else if (window.attachEvent) {\r\n            window.attachEvent(\"onload\", pageLoaded);\r\n\r\n            testDiv = document.createElement('div');\r\n            try {\r\n                isTop = window.frameElement === null;\r\n            } catch (e) {}\r\n\r\n            //DOMContentLoaded approximation that uses a doScroll, as found by\r\n            //Diego Perini: http://javascript.nwbox.com/IEContentLoaded/,\r\n            //but modified by other contributors, including jdalton\r\n            if (testDiv.doScroll && isTop && window.external) {\r\n                scrollIntervalId = setInterval(function () {\r\n                    try {\r\n                        testDiv.doScroll();\r\n                        pageLoaded();\r\n                    } catch (e) {}\r\n                }, 30);\r\n            }\r\n        }\r\n\r\n        //Check if document already complete, and if so, just trigger page load\r\n        //listeners. Latest webkit browsers also use \"interactive\", and\r\n        //will fire the onDOMContentLoaded before \"interactive\" but not after\r\n        //entering \"interactive\" or \"complete\". More details:\r\n        //http://dev.w3.org/html5/spec/the-end.html#the-end\r\n        //http://stackoverflow.com/questions/3665561/document-readystate-of-interactive-vs-ondomcontentloaded\r\n        //Hmm, this is more complicated on further use, see \"firing too early\"\r\n        //bug: https://github.com/requirejs/domReady/issues/1\r\n        //so removing the || document.readyState === \"interactive\" test.\r\n        //There is still a window.onload binding that should get fired if\r\n        //DOMContentLoaded is missed.\r\n        if (document.readyState === \"complete\") {\r\n            pageLoaded();\r\n        }\r\n    }\r\n\r\n    /** START OF PUBLIC API **/\r\n\r\n    /**\r\n     * Registers a callback for DOM ready. If DOM is already ready, the\r\n     * callback is called immediately.\r\n     * @param {Function} callback\r\n     */\r\n    function domReady(callback) {\r\n        if (isPageLoaded) {\r\n            callback(doc);\r\n        } else {\r\n            readyCalls.push(callback);\r\n        }\r\n        return domReady;\r\n    }\r\n\r\n    ///domReady.version = '2.0.1';\r\n\r\n    /**\r\n     * Loader Plugin API method\r\n     */\r\n    domReady.load = function (name, req, onLoad, config) {\r\n        if (config.isBuild) {\r\n            onLoad(null);\r\n        } else {\r\n            domReady(onLoad);\r\n        }\r\n    };\r\n\r\n    /** END OF PUBLIC API **/\r\n\r\n    return modular.plugins.ready = domReady;\r\n});\r\n"]}